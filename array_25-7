// Muntiple matrix.
#include <iostream.h>
#include <conio.h>
class matrix
{
  private:
    int a[10][10],r,c;
  public:
    void input();
    void display();
    int mul(matrix,matrix);
};
void matrix::input()
{
    int i,j;
    cout<<"Enter the number of rows and columns of matrix :";
    cin>>r>>c;
    cout<<"Enter the elements of matrix:\n";
    for(i=0; i<r; i++)
    {
        for(j=0; j<c; j++)
        {
            cin>>a[i][j];
        }
    }
}
void matrix::display()
{
    int i,j;
    for(i=0; i<r; i++)
    {
        for(j=0; j<c; j++)
        {
            cout<<a[i][j]<<"\t";
        }
        
        cout<<endl;
    }
}
int matrix::mul(matrix x,matrix y)
{
    int i,j,k;
    if(x.c!=y.r)
        return 0;
    else
    {
        for(i=0; i<x.r; i++)
        {
            for(j=0; j<y.c; j++)
            {
                int s=0;
                for(k=0; k<x.c; k++)
                {
                    s=s+x.a[i][k]*y.a[k][j];
                }
                a[i][j]=s;
            }
        }
        r=x.r;
        c=y.c;
        return 1;
    }
}
int main()
{
    matrix m1,m2,m3;
    m1.input();
    m2.input();
    int f= m3.mul(m1,m2);
    if(f==0)
        cout<<"Cannot multiply the matrices.";
    else
    {
    
        cout<<"The product is: ";
        m3.display();
    }
    return 0;
}
....................................................................

// sparce matrix
#include <iostream.h>
#include <conio.h>

int main()
{
    int r,c,a[10][10],count=0;
    cout <<"Enter the number of rows and columns:";
    cin>>r>>c;
    cout<<"Enter the matrix:"<<endl;
    for(int i=0; i<r; i++)
    {
        for(int j=0; j<c; j++)
            cin>>a[i][j];
    }
    for(int i=0; i<r; i++)
    {
        for(int j=0; j<c; j++)
        {
            if(a[i][j]==0)
                count ++;
        }
    }
    cout <<"The sparse matrix is :" <<endl;
    for(int i=0; i<r; i++)
    {
        for(int j=0; j<c; j++)
            cout<<a[i][j]<<" ";
        cout<<endl;
    }
    cout<<"the number of zeros in matrix:"<< count<<endl;
    if(count > ((r * c)/ 2))
        cout<<"this is sparce matrix."<<endl;
    else
        cout<<"This is not a sparce matrix."<<endl;
    return 0;
}
..............................................................................
// Symmetric array
#include <iostream.h>
#include <conio.h>
using namespace std;

class symmetric
{
  private:
    int a[10][10],r,c;
  public:
    void input();
    void display();
};

void symmetric::input()
{
    int i,j;
    cout<<"ENTER THE NUMBER OF ROWS AND COLUMNS:";
    cin>>r>>c;
    cout<<"ENTER THE ELEMENTS:\n";
    for(i=0; i<r; i++)
    {
        for(j=0; j<c; j++)
        {
            cin>>a[i][j];
        }
    }
    
}

void symmetric::display()
{
    int i,j,f=0;
    if(r!=c)
    {
        cout<<"It is not a symmetric matrix";
    }
    else
    {
        for(i=0; i<r; i++)
        {
            for(j=0; j<c; j++)
            {
            
                if(a[i][j]!=a[j][i] && i==j)
                {
                    f=0;
                    break;
                }
                else
                {
                    f=1;
                }
            }
        }
        if(f==1)
            cout<<"It is symmetric matrix";
        else
            cout<<"It is not a symmetric matrix";
    }
}

int main()
{
    symmetric ob;
    ob.input();
    ob.display();
    
    return 0;
}
......................................................................
// Transpose
#include <iostream.h>
#include <conio.h>
using namespace std;

class transpose
{
  private:
    int a[10][10],r,c;
  public:
    void input();
    void display();
};

void transpose::input()
{
    int i,j;
    cout<<"ENTER THE NUMBER OF ROWS AND COLUMNS:";
    cin>>r>>c;
    cout<<"ENTER THE ELEMENTS:\n";
    for(i=0; i<r; i++)
    {
        for(j=0; j<c; j++)
        {
            cin>>a[i][j];
        }
    }
    
}

void transpose::display()
{
    int i,j;
    cout<<"THE TRANSPOSED MATRIX :\n";
    for(i=0; i<c; i++)
    {
        for(j=0; j<r; j++)
            cout<<a[j][i]<<"\t";
        cout<<endl;
        
    }
}

int main()
{
    transpose ob;
    ob.input();
    ob.display();
    return 0;
}
