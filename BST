#include<iostream>
#include<conio.h>
using namespace std;
struct node
{
    int data;
    struct node *Rchild,*Lchild;
};
typedef struct node node;
node *root=NULL;
void insert_BST(int n)
{
    node *t=new node,*p;
    if(t==NULL)
    {
        cout<<"COULD NOT CREATE NODE";
        return;
    }
    t->data=n;
    t->Lchild=NULL;
    t->Rchild=NULL;
    if(root==NULL)
        root=t;
    else
    {
        p=root;
        while(1)
        {
            if(p->data>n)
            {
                if(p->Lchild==NULL)
                {
                    p->Lchild=t;
                    break;
                }
                else
                {
                    p=p->Lchild;
                }
            }
            else//p<n
            {
                if(p->Rchild==NULL)
                {
                    p->Rchild=t;
                    break;
                }
                else
                {
                    p=p->Rchild;
                }
            }
        }
    }
    cout<<"ELEMENT INSERTED"<<endl;
}
void show_order(node *r)
{
    if(r!= NULL)
    {
        show_order(r->Lchild);
        cout<<r->data<<" ";
        show_order(r->Rchild);
    }
}
void Search_el(node *root, int data)
{
    int height = 0;
    node *temp=root;
    // Run the loop untill temp points to a NULL pointer.
    while(temp != NULL)
    {
        height++;
        if(temp->data == data)
        {
            cout<<"\nData found at height: "<<height;
            return;
        }
        // Shift pointer to left child.
        else if(temp->data > data)
            temp = temp->Lchild;
        // Shift pointer to right child.
        else
            temp = temp->Rchild;
    }
    cout<<"\n Data not found";
    return;
}
int main()
{
    int ch,n;
    while(1)
    {
        system("cls");
        cout<<"1.insert\n2.Display\n3.exit\n4.Search Element\nENTER YOUR CHOICE : ";
        cin>>ch;
        switch(ch)
        {
            case 1:
                cout<<"ENTER THE ELEMENT TO BE INSERTED : ";
                cin>>n;
                insert_BST(n);
                break;
            case 2:
                cout<<"THE INORDER TRAVERSAL IS : \n";
                show_order(root);
                cout<<endl;
                break;
            case 3:
                return 0;
            case 4:
                int n;
                cout<<"Enter the element to be searched : ";
                cin>>n;
                Search_el(root,n);
                break;
            default:
                cout<<"INVALID CHOIOCE!"<<endl;
        }
        getch();
    }
    return 0;
}
